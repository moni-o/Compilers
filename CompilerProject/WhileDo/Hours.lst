     1                                  sys_exit	equ	1
     2                                  sys_read	equ	3
     3                                  sys_write	equ	4
     4                                  stdin		equ	0
     5                                  stdout		equ	1
     6                                  
     7                                  
     8                                  section	.data
     9 00000000 456E74657220612069-     	userMsg	db	'Enter a integer:(less than 32,765):'
     9 00000009 6E74656765723A286C-
     9 00000012 657373207468616E20-
     9 0000001B 33322C373635293A   
    10                                  	lenUserMsg	equ	$	-	userMsg
    11 00000023 596F7520656E746572-     	displayMsg	db	'You entered: '
    11 0000002C 65643A20           
    12                                  	lenDisplayMsg	equ	$-displayMsg
    13 00000030 0A                      	newline	db	0xA
    14 00000031 0A00                    	Ten	DW	10
    15 00000033 54656D706368617220-     	printTempchar	db	'Tempchar = :'
    15 0000003C 3D203A             
    16                                  	lenPrintTempchar	equ	$-printTempchar
    17 0000003F 416E733D                	Result	db	'Ans='
    18 00000043 6161616161              	ResultValue	db'aaaaa'
    19 00000048 0A                      			db	0xA
    20                                  	ResultEnd	equ	$-Result
    21 00000049 414243444546-           	num	times 6 db'ABCDEF'
    21 00000049 <rep 6h>           
    22                                  	numEnd		equ	$-num
    23 0000006D 0100                    	Lit1	DW	1
    24 0000006F 0000                    	Lit0	DW	0
    25 00000071 0700                    	Lit7	DW	7
    26 00000073 1800                    	Lit24	DW	24
    27                                  
    28                                  
    29                                  section	.bss
    30 00000000 ??                      	TempChar	RESB	1
    31 00000001 ??                      	testchar	RESB	1
    32 00000002 ????                    	ReadInt		RESW	1
    33 00000004 ????                    	tempint		RESW	1
    34 00000006 ??                      	negflag		RESB	1
    35 00000007 ????                    	WEEKS		RESW	1
    36 00000009 ????                    	HOURS		RESW	1
    37 0000000B ????                    	WEEKCOUNT		RESW	1
    38 0000000D ????                    	DAY		RESW	1
    39 0000000F ????                    	Temp1		RESW	1
    40 00000011 ????                    	Temp2		RESW	1
    41 00000013 ????                    	Temp3		RESW	1
    42 00000015 ????                    	Temp4		RESW	1
    43 00000017 ????                    	Temp5		RESW	1
    44 00000019 ????                    	Temp6		RESW	1
    45 0000001B ????                    	Temp7		RESW	1
    46                                  
    47                                  
    48                                  	global	_start
    49                                  
    50                                  section	.text
    51                                  
    52 00000000 90                      _start:		nop
    53 00000001 E81A010000              Again:	call PrintString
    54 00000006 E834010000              	call GetAnInteger
    55 0000000B 668B0425[02000000]      	mov	ax,[ReadInt]
    56 00000013 66890425[07000000]      	mov	[WEEKS],ax
    57 0000001B 668B0425[6D000000]      	mov	ax,[Lit1]
    58 00000023 66890425[0B000000]      	mov	[WEEKCOUNT],ax
    59 0000002B 668B0425[6F000000]      	mov	ax,[Lit0]
    60 00000033 66890425[09000000]      	mov	[HOURS],ax
    61 0000003B 668B0425[0B000000]      W1:	mov	ax,[WEEKCOUNT]
    62 00000043 663B0425[07000000]      	cmp	ax,[WEEKS]
    63 0000004B 0F8FA2000000            	JG	L1
    64 00000051 668B0425[6D000000]      	mov	ax,[Lit1]
    65 00000059 66890425[0D000000]      	mov	[DAY],ax
    66 00000061 668B0425[0D000000]      W2:	mov	ax,[DAY]
    67 00000069 663B0425[71000000]      	cmp	ax,[Lit7]
    68 00000071 7F52                    	JG	L2
    69 00000073 668B0425[09000000]      	mov	ax,[HOURS]
    70 0000007B 66030425[73000000]      	add	ax,[Lit24]
    71 00000083 66890425[0F000000]      	mov	[Temp1],ax
    72 0000008B 668B0425[0F000000]      	mov	ax,[Temp1]
    73 00000093 66890425[09000000]      	mov	[HOURS],ax
    74 0000009B 668B0425[0D000000]      	mov	ax,[DAY]
    75 000000A3 66030425[6D000000]      	add	ax,[Lit1]
    76 000000AB 66890425[0F000000]      	mov	[Temp1],ax
    77 000000B3 668B0425[0F000000]      	mov	ax,[Temp1]
    78 000000BB 66890425[0D000000]      	mov	[DAY],ax
    79 000000C3 EB9C                    	JMP	W2
    80 000000C5 90                      L2:	NOP
    81 000000C6 668B0425[0B000000]      	mov	ax,[WEEKCOUNT]
    82 000000CE 66030425[6D000000]      	add	ax,[Lit1]
    83 000000D6 66890425[0F000000]      	mov	[Temp1],ax
    84 000000DE 668B0425[0F000000]      	mov	ax,[Temp1]
    85 000000E6 66890425[0B000000]      	mov	[WEEKCOUNT],ax
    86 000000EE E948FFFFFF              	JMP	W1
    87 000000F3 90                      L1:	NOP
    88 000000F4 668B0425[09000000]      	mov	ax,[HOURS]
    89 000000FC E8A7000000              	call	ConvertIntegerToString
    90 00000101 B804000000              	mov	eax,4
    91 00000106 BB01000000              	mov	ebx,1
    92 0000010B B9[3F000000]            	mov	ecx,Result
    93 00000110 BA0A000000              	mov	edx,ResultEnd
    94 00000115 CD80                    	int	80h
    95                                  
    96                                  
    97                                  fini:
    98 00000117 B801000000              	mov	eax,sys_exit
    99 0000011C 31DB                    	xor	ebx,ebx
   100 0000011E CD80                    	int	80h
   101                                  PrintString:
   102 00000120 6650                    	push	ax
   103 00000122 6652                    	push	dx
   104 00000124 B804000000              	mov	eax,4
   105 00000129 BB01000000              	mov	ebx,1
   106 0000012E B9[00000000]            	mov	ecx,userMsg
   107 00000133 BA23000000              	mov	edx,lenUserMsg
   108 00000138 CD80                    	int	80h
   109 0000013A 665A                    	pop	dx
   110 0000013C 6658                    	pop	ax
   111 0000013E C3                      	ret
   112                                  
   113                                  
   114                                  GetAnInteger:
   115 0000013F B803000000              	mov	eax,3
   116 00000144 BB02000000              	mov	ebx,2
   117 00000149 B9[49000000]            	mov	ecx,num
   118 0000014E BA06000000              	mov	edx,6
   119 00000153 CD80                    	int	0x80
   120 00000155 89C2                    	mov	edx,eax
   121 00000157 B804000000              	mov	eax,4
   122 0000015C BB01000000              	mov	ebx,1
   123 00000161 CD80                    	int 80h
   124                                  ConvertStringToInteger:
   125 00000163 66B80000                	mov	ax,0
   126 00000167 66890425[02000000]      	mov[ReadInt],ax
   127 0000016F B9[49000000]            	mov	ecx,num
   128 00000174 66BB0000                	mov	bx,0
   129 00000178 678A19                  	mov	bl,byte[ecx]
   130 0000017B 80EB30                  Next:	sub	bl,'0'
   131 0000017E 668B0425[02000000]      	mov	ax,[ReadInt]
   132 00000186 66BA0A00                	mov	dx,10
   133 0000018A 66F7E2                  	mul	dx
   134 0000018D 6601D8                  	add	ax,bx
   135 00000190 66890425[02000000]      	mov	[ReadInt],ax
   136 00000198 66BB0000                	mov	bx,0
   137 0000019C 83C101                  	add	ecx,1
   138 0000019F 678A19                  	mov	bl,byte[ecx]
   139 000001A2 80FB0A                  	cmp	bl,0XA
   140 000001A5 75D4                    	jne	Next
   141 000001A7 C3                      	ret
   142                                  
   143                                  
   144                                  ConvertIntegerToString:
   145 000001A8 BB[47000000]            	mov	ebx,ResultValue + 4
   146                                  ConvertLoop:
   147 000001AD 6629D2                  	sub	dx,dx
   148 000001B0 66B90A00                	mov	cx,10
   149 000001B4 66F7F1                  	div	cx
   150 000001B7 80C230                  	add	dl,'0'
   151 000001BA 678813                  	mov [ebx], dl
   152 000001BD FFCB                    	dec	ebx
   153 000001BF 81FB[43000000]          	cmp	ebx,ResultValue
   154 000001C5 7DE6                    	jge	ConvertLoop
   155 000001C7 C3                      	ret
