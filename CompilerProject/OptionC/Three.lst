     1                                  sys_exit	equ	1
     2                                  sys_read	equ	3
     3                                  sys_write	equ	4
     4                                  stdin		equ	0
     5                                  stdout		equ	1
     6                                  
     7                                  
     8                                  section	.data
     9 00000000 456E74657220612069-     	userMsg	db	'Enter a integer:(less than 32,765):'
     9 00000009 6E74656765723A286C-
     9 00000012 657373207468616E20-
     9 0000001B 33322C373635293A   
    10                                  	lenUserMsg	equ	$	-	userMsg
    11 00000023 596F7520656E746572-     	displayMsg	db	'You entered: '
    11 0000002C 65643A20           
    12                                  	lenDisplayMsg	equ	$-displayMsg
    13 00000030 0A                      	newline	db	0xA
    14 00000031 0A00                    	Ten	DW	10
    15 00000033 54656D706368617220-     	printTempchar	db	'Tempchar = :'
    15 0000003C 3D203A             
    16                                  	lenPrintTempchar	equ	$-printTempchar
    17 0000003F 416E733D                	Result	db	'Ans='
    18 00000043 6161616161              	ResultValue	db'aaaaa'
    19 00000048 0A                      			db	0xA
    20                                  	ResultEnd	equ	$-Result
    21 00000049 414243444546-           	num	times 6 db'ABCDEF'
    21 00000049 <rep 6h>           
    22                                  	numEnd		equ	$-num
    23                                  
    24                                  
    25                                  section	.bss
    26 00000000 ??                      	TempChar	RESB	1
    27 00000001 ??                      	testchar	RESB	1
    28 00000002 ????                    	ReadInt		RESW	1
    29 00000004 ????                    	tempint		RESW	1
    30 00000006 ??                      	negflag		RESB	1
    31 00000007 ????                    	A		RESW	1
    32 00000009 ????                    	B		RESW	1
    33 0000000B ????                    	C		RESW	1
    34 0000000D ????                    	Temp1		RESW	1
    35 0000000F ????                    	Temp2		RESW	1
    36 00000011 ????                    	Temp3		RESW	1
    37 00000013 ????                    	Temp4		RESW	1
    38 00000015 ????                    	Temp5		RESW	1
    39 00000017 ????                    	Temp6		RESW	1
    40 00000019 ????                    	Temp7		RESW	1
    41                                  
    42                                  
    43                                  	global	_start
    44                                  
    45                                  section	.text
    46                                  
    47 00000000 90                      _start:		nop
    48 00000001 E820010000              Again:	call PrintString
    49 00000006 E83A010000              	call GetAnInteger
    50 0000000B 668B0425[02000000]      	mov	ax,[ReadInt]
    51 00000013 66890425[07000000]      	mov	[A],ax
    52 0000001B E806010000              	call PrintString
    53 00000020 E820010000              	call GetAnInteger
    54 00000025 668B0425[02000000]      	mov	ax,[ReadInt]
    55 0000002D 66890425[09000000]      	mov	[B],ax
    56 00000035 E8EC000000              	call PrintString
    57 0000003A E806010000              	call GetAnInteger
    58 0000003F 668B0425[02000000]      	mov	ax,[ReadInt]
    59 00000047 66890425[0B000000]      	mov	[C],ax
    60 0000004F 668B0425[07000000]      	mov	ax,[A]
    61 00000057 663B0425[09000000]      	cmp	ax,[B]
    62 0000005F 7E5E                    	JLE	L1
    63 00000061 668B0425[07000000]      	mov	ax,[A]
    64 00000069 663B0425[0B000000]      	cmp	ax,[C]
    65 00000071 7E25                    	JLE	L2
    66 00000073 668B0425[07000000]      	mov	ax,[A]
    67 0000007B E82E010000              	call	ConvertIntegerToString
    68 00000080 B804000000              	mov	eax,4
    69 00000085 BB01000000              	mov	ebx,1
    70 0000008A B9[3F000000]            	mov	ecx,Result
    71 0000008F BA0A000000              	mov	edx,ResultEnd
    72 00000094 CD80                    	int	80h
    73 00000096 EB24                    	JMP	L3
    74 00000098 90                      L2:	NOP
    75 00000099 668B0425[0B000000]      	mov	ax,[C]
    76 000000A1 E808010000              	call	ConvertIntegerToString
    77 000000A6 B804000000              	mov	eax,4
    78 000000AB BB01000000              	mov	ebx,1
    79 000000B0 B9[3F000000]            	mov	ecx,Result
    80 000000B5 BA0A000000              	mov	edx,ResultEnd
    81 000000BA CD80                    	int	80h
    82 000000BC 90                      L3:	NOP
    83 000000BD EB5D                    	JMP	L4
    84 000000BF 90                      L1:	NOP
    85 000000C0 668B0425[09000000]      	mov	ax,[B]
    86 000000C8 663B0425[0B000000]      	cmp	ax,[C]
    87 000000D0 7E25                    	JLE	L5
    88 000000D2 668B0425[09000000]      	mov	ax,[B]
    89 000000DA E8CF000000              	call	ConvertIntegerToString
    90 000000DF B804000000              	mov	eax,4
    91 000000E4 BB01000000              	mov	ebx,1
    92 000000E9 B9[3F000000]            	mov	ecx,Result
    93 000000EE BA0A000000              	mov	edx,ResultEnd
    94 000000F3 CD80                    	int	80h
    95 000000F5 EB24                    	JMP	L6
    96 000000F7 90                      L5:	NOP
    97 000000F8 668B0425[0B000000]      	mov	ax,[C]
    98 00000100 E8A9000000              	call	ConvertIntegerToString
    99 00000105 B804000000              	mov	eax,4
   100 0000010A BB01000000              	mov	ebx,1
   101 0000010F B9[3F000000]            	mov	ecx,Result
   102 00000114 BA0A000000              	mov	edx,ResultEnd
   103 00000119 CD80                    	int	80h
   104 0000011B 90                      L6:	NOP
   105 0000011C 90                      L4:	NOP
   106                                  
   107                                  
   108                                  fini:
   109 0000011D B801000000              	mov	eax,sys_exit
   110 00000122 31DB                    	xor	ebx,ebx
   111 00000124 CD80                    	int	80h
   112                                  PrintString:
   113 00000126 6650                    	push	ax
   114 00000128 6652                    	push	dx
   115 0000012A B804000000              	mov	eax,4
   116 0000012F BB01000000              	mov	ebx,1
   117 00000134 B9[00000000]            	mov	ecx,userMsg
   118 00000139 BA23000000              	mov	edx,lenUserMsg
   119 0000013E CD80                    	int	80h
   120 00000140 665A                    	pop	dx
   121 00000142 6658                    	pop	ax
   122 00000144 C3                      	ret
   123                                  
   124                                  
   125                                  GetAnInteger:
   126 00000145 B803000000              	mov	eax,3
   127 0000014A BB02000000              	mov	ebx,2
   128 0000014F B9[49000000]            	mov	ecx,num
   129 00000154 BA06000000              	mov	edx,6
   130 00000159 CD80                    	int	0x80
   131 0000015B 89C2                    	mov	edx,eax
   132 0000015D B804000000              	mov	eax,4
   133 00000162 BB01000000              	mov	ebx,1
   134 00000167 CD80                    	int 80h
   135                                  ConvertStringToInteger:
   136 00000169 66B80000                	mov	ax,0
   137 0000016D 66890425[02000000]      	mov[ReadInt],ax
   138 00000175 B9[49000000]            	mov	ecx,num
   139 0000017A 66BB0000                	mov	bx,0
   140 0000017E 678A19                  	mov	bl,byte[ecx]
   141 00000181 80EB30                  Next:	sub	bl,'0'
   142 00000184 668B0425[02000000]      	mov	ax,[ReadInt]
   143 0000018C 66BA0A00                	mov	dx,10
   144 00000190 66F7E2                  	mul	dx
   145 00000193 6601D8                  	add	ax,bx
   146 00000196 66890425[02000000]      	mov	[ReadInt],ax
   147 0000019E 66BB0000                	mov	bx,0
   148 000001A2 83C101                  	add	ecx,1
   149 000001A5 678A19                  	mov	bl,byte[ecx]
   150 000001A8 80FB0A                  	cmp	bl,0XA
   151 000001AB 75D4                    	jne	Next
   152 000001AD C3                      	ret
   153                                  
   154                                  
   155                                  ConvertIntegerToString:
   156 000001AE BB[47000000]            	mov	ebx,ResultValue + 4
   157                                  ConvertLoop:
   158 000001B3 6629D2                  	sub	dx,dx
   159 000001B6 66B90A00                	mov	cx,10
   160 000001BA 66F7F1                  	div	cx
   161 000001BD 80C230                  	add	dl,'0'
   162 000001C0 678813                  	mov [ebx], dl
   163 000001C3 FFCB                    	dec	ebx
   164 000001C5 81FB[43000000]          	cmp	ebx,ResultValue
   165 000001CB 7DE6                    	jge	ConvertLoop
   166 000001CD C3                      	ret
