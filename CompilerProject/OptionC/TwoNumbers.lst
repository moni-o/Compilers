     1                                  sys_exit	equ	1
     2                                  sys_read	equ	3
     3                                  sys_write	equ	4
     4                                  stdin		equ	0
     5                                  stdout		equ	1
     6                                  
     7                                  
     8                                  section	.data
     9 00000000 456E74657220612069-     	userMsg	db	'Enter a integer:(lesst than 32,765):'
     9 00000009 6E74656765723A286C-
     9 00000012 65737374207468616E-
     9 0000001B 2033322C373635293A 
    10                                  	lenUserMsg	equ	$	-	userMsg
    11 00000024 596F7520656E746572-     	displayMsg	db	'You entered: '
    11 0000002D 65643A20           
    12                                  	lenDisplayMsg	equ	$-displayMsg
    13 00000031 0A                      	newline	db	0xA
    14 00000032 0A00                    	Ten	DW	10
    15 00000034 54656D706368617220-     	printTempchar	db	'Tempchar = :'
    15 0000003D 3D203A             
    16                                  	lenPrintTempchar	equ	$-printTempchar
    17 00000040 416E733D                	Result	db	'Ans='
    18 00000044 6161616161              	ResultValue	db'aaaaa'
    19 00000049 0A                      			db	0xA
    20                                  	ResultEnd	equ	$-Result
    21 0000004A 414243444546-           	num	times 6 db'ABCDEF'
    21 0000004A <rep 6h>           
    22                                  	numEnd		equ	$-num
    23                                  
    24                                  
    25                                  section	.bss
    26 00000000 ??                      	TempChar	RESB	1
    27 00000001 ??                      	testchar	RESB	1
    28 00000002 ????                    	ReadInt		RESW	1
    29 00000004 ????                    	tempint		RESW	1
    30 00000006 ??                      	negflag		RESB	1
    31 00000007 ????                    	A		RESW	1
    32 00000009 ????                    	B		RESW	1
    33 0000000B ????                    	Temp1		RESW	1
    34 0000000D ????                    	Temp2		RESW	1
    35 0000000F ????                    	Temp3		RESW	1
    36 00000011 ????                    	Temp4		RESW	1
    37 00000013 ????                    	Temp5		RESW	1
    38 00000015 ????                    	Temp6		RESW	1
    39 00000017 ????                    	Temp7		RESW	1
    40                                  
    41                                  
    42                                  	global	_start
    43                                  
    44                                  section	.text
    45                                  
    46 00000000 90                      _start:		nop
    47 00000001 E894000000              Again:	call PrintString
    48 00000006 E8AE000000              	call GetAnInteger
    49 0000000B 668B0425[02000000]      	mov	ax,[ReadInt]
    50 00000013 66890425[07000000]      	mov	[A],ax
    51 0000001B E87A000000              	call PrintString
    52 00000020 E894000000              	call GetAnInteger
    53 00000025 668B0425[02000000]      	mov	ax,[ReadInt]
    54 0000002D 66890425[09000000]      	mov	[B],ax
    55 00000035 668B0425[07000000]      	mov	ax,[A]
    56 0000003D 663B0425[09000000]      	cmp	ax,[B]
    57 00000045 7E25                    	JLE	L1
    58 00000047 668B0425[07000000]      	mov	ax,[A]
    59 0000004F E8CE000000              	call	ConvertIntegerToString
    60 00000054 B804000000              	mov	eax,4
    61 00000059 BB01000000              	mov	ebx,1
    62 0000005E B9[40000000]            	mov	ecx,Result
    63 00000063 BA0A000000              	mov	edx,ResultEnd
    64 00000068 CD80                    	int	80h
    65 0000006A EB24                    	JMP	L2
    66 0000006C 90                      L1:	NOP
    67 0000006D 668B0425[09000000]      	mov	ax,[B]
    68 00000075 E8A8000000              	call	ConvertIntegerToString
    69 0000007A B804000000              	mov	eax,4
    70 0000007F BB01000000              	mov	ebx,1
    71 00000084 B9[40000000]            	mov	ecx,Result
    72 00000089 BA0A000000              	mov	edx,ResultEnd
    73 0000008E CD80                    	int	80h
    74 00000090 90                      L2:	NOP
    75                                  
    76                                  
    77                                  fini:
    78 00000091 B801000000              	mov	eax,sys_exit
    79 00000096 31DB                    	xor	ebx,ebx
    80 00000098 CD80                    	int	80h
    81                                  PrintString:
    82 0000009A 6650                    	push	ax
    83 0000009C 6652                    	push	dx
    84 0000009E B804000000              	mov	eax,4
    85 000000A3 BB01000000              	mov	ebx,1
    86 000000A8 B9[00000000]            	mov	ecx,userMsg
    87 000000AD BA24000000              	mov	edx,lenUserMsg
    88 000000B2 CD80                    	int	80h
    89 000000B4 665A                    	pop	dx
    90 000000B6 6658                    	pop	ax
    91 000000B8 C3                      	ret
    92                                  
    93                                  
    94                                  GetAnInteger:
    95 000000B9 B803000000              	mov	eax,3
    96 000000BE BB02000000              	mov	ebx,2
    97 000000C3 B9[4A000000]            	mov	ecx,num
    98 000000C8 BA06000000              	mov	edx,6
    99 000000CD CD80                    	int	0x80
   100 000000CF 89C2                    	mov	edx,eax
   101 000000D1 B804000000              	mov	eax,4
   102 000000D6 BB01000000              	mov	ebx,1
   103 000000DB CD80                    	int 80h
   104                                  ConvertStringToInteger:
   105 000000DD 66B80000                	mov	ax,0
   106 000000E1 66890425[02000000]      	mov[ReadInt],ax
   107 000000E9 B9[4A000000]            	mov	ecx,num
   108 000000EE 66BB0000                	mov	bx,0
   109 000000F2 678A19                  	mov	bl,byte[ecx]
   110 000000F5 80EB30                  Next:	sub	bl,'0'
   111 000000F8 668B0425[02000000]      	mov	ax,[ReadInt]
   112 00000100 66BA0A00                	mov	dx,10
   113 00000104 66F7E2                  	mul	dx
   114 00000107 6601D8                  	add	ax,bx
   115 0000010A 66890425[02000000]      	mov	[ReadInt],ax
   116 00000112 66BB0000                	mov	bx,0
   117 00000116 83C101                  	add	ecx,1
   118 00000119 678A19                  	mov	bl,byte[ecx]
   119 0000011C 80FB0A                  	cmp	bl,0XA
   120 0000011F 75D4                    	jne	Next
   121 00000121 C3                      	ret
   122                                  
   123                                  
   124                                  ConvertIntegerToString:
   125 00000122 BB[48000000]            	mov	ebx,ResultValue + 4
   126                                  ConvertLoop:
   127 00000127 6629D2                  	sub	dx,dx
   128 0000012A 66B90A00                	mov	cx,10
   129 0000012E 66F7F1                  	div	cx
   130 00000131 80C230                  	add	dl,'0'
   131 00000134 678813                  	mov [ebx], dl
   132 00000137 FFCB                    	dec	ebx
   133 00000139 81FB[44000000]          	cmp	ebx,ResultValue
   134 0000013F 7DE6                    	jge	ConvertLoop
   135 00000141 C3                      	ret
